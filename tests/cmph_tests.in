#!/bin/sh

cd "$(dirname "$0")" || exit 1
set -e
N=10000
WORDS=/usr/share/dict/words

test -e _words || head -n "$N"     <"$WORDS" >_words
test -e _words1000 || head -n 1000 <"$WORDS" >_words1000
test -e _words100 || head -n 100   <"$WORDS" >_words100

for a in bmz chm brz fch bdz bdz_ph bmz8 chd chd_ph; do
    if [ "$a" = "bmz8" ]; then
        rm -f _words100.mph
        words=_words100
    elif [ "$a" = "fch" ]; then
        rm -f _words1000.mph
        words=_words1000
    else
        words=_words
    fi
    #if [ $a = fch ]; then
    #    a="fch -f crc32 -s 1"
    #fi
    for f in jenkins wyhash crc32 fnv djb2 sdbm; do
        fail=
        #if [ $f = crc32 ] || [ $f = sdbm ] || [ $f = djb2 ]
        #if [ $f = sdbm ] || [ $f = djb2 ]
        #then
        #    if [ $a = chd_ph ]; then break; fi
        #    echo too weak $f hash alone, add a seperate hashfunc and a seed
        #    if [ $a = bdz -o $a = bdz_ph ] && [ $f = sdbm ]; then
        #        words=_words100
        #        f="jenkins -f $f -s 11"
        #    elif [ $a = bdz -o $a = bdz_ph ] && [ $f = djb2 ]; then
        #        words=_words1000
        #        f="jenkins -f $f -s 11"
        #    else
        #        f="$f -f jenkins -s 11"
        #    fi
        #elif [ $a = chm -o $a = brz -o $a = bmz ] && [ $f = crc32 ]
        #then
        #    echo too weak $f hash alone, add a seperate hashfunc and a seed
        #    f="$f -f jenkins -s 11"
        #elif [ $a = brz ] && [ $f = wyhash -o $f = fnv ]
        #then
        #    echo too weak $f hash alone, add a seperate hashfunc and a seed
        #    f="$f -f jenkins -s 11"
        #elif [ $a = fch ] && [ $f = wyhash -o $f = fnv ]
        #then
        #    echo too weak $f hash alone, add a seperate hashfunc and a seed
        #    f="$f -f jenkins -s 11"
        #elif [ $a = bmz8 ] && [ $f = wyhash -o $f = fnv ]
        #then
        #    echo too weak $f hash alone, add a seperate hashfunc and a seed
        #    f="$f -f jenkins -s 11"
        #fi
        #case $f in
        #    sdbm|djb2*)
        #        echo too weak $f hash with $a
        #        break
        #        ;;
        #esac
        echo "** cmph -g -a $a -f $f $words"
        ../src/cmph -g -a "$a" -f "$f" "$words" || fail=1
        if [ -n "$fail" ]
        then
            fail=
            echo "too weak $f hash alone, add a seperate hashfunc and a seed"
            if [ $f = crc32 ]; then
                f="$f -f jenkins -s 11"
            else
                f="$f -f crc32 -s 11"
            fi
            echo "** cmph -g -a $a -f $f $words"
            # shellcheck disable=SC2086
            ../src/cmph -g -a "$a" -f $f "$words" || fail=1
            if [ -n "$fail" ]
            then
                fail=
                echo "still too weak $f hashes, use less keys"
                words=_words1000
                echo "** cmph -g -a $a -f $f $words"
                # shellcheck disable=SC2086
                ../src/cmph -g -a "$a" -f $f "$words"
            fi
        fi
        echo "** cmph -a $a -f $f $words"
        # shellcheck disable=SC2086
        ../src/cmph -a "$a" -f $f $words
        echo "** mphf_tests -a $a -f $f $words"
        # shellcheck disable=SC2086
        ./mphf_tests -a "$a" -f $f "$words"
        rm -f "$words.mph"
        if [ "$words" = "_words1000" ]; then
            words=_words
        fi
    done
done
rm -f _words100 _words100.mph
rm -f _words1000 _words1000.mph
rm -f _words _words.mph
