#!/bin/sh

cd "$(dirname "$0")" || exit 1
set -e
N=10000
WORDS=/usr/share/dict/words

test -e _words || head -n "$N"     <"$WORDS" >_words
test -e _words1000 || head -n 1000 <"$WORDS" >_words1000
test -e _words100 || head -n 100   <"$WORDS" >_words100

while getopts "a:f:" opt
do
    case "$opt" in
        a)
            a="$OPTARG"
            ;;
        f)
            f="$OPTARG"
            ;;
        :)
            echo "Error: Option -$OPTARG requires an argument" >&2
            exit 1
            ;;
        *)  echo "Error: Unknown option $opt" >&2
            exit 1
            ;;
    esac
    shift $((OPTIND-1))
done

algos="bmz chm brz fch bdz bdz_ph bmz8 chd chd_ph"
if [ -n "$a" ]; then
    algos="$a"
fi
hashes="jenkins wyhash crc32 fnv djb2 sdbm"
if [ -n "$f" ]; then
    hashes="$f"
fi

for a in $algos; do
    if [ "$a" = "bmz8" ]; then
        rm -f _words100.mph
        words=_words100
    elif [ "$a" = "fch" ]; then
        rm -f _words1000.mph
        words=_words1000
    else
        words=_words
    fi
    for f in $hashes; do
        fail=
        opts=
        echo "** cmph -g -a $a -f $f $words"
        # a retry often helps
        ../src/cmph -g -a "$a" -f "$f" "$words" || \
            ../src/cmph -g -a "$a" -f "$f" "$words" || fail=1
        if [ -n "$fail" ]
        then
            fail=
            echo "too weak $f hash alone, add a seperate hashfunc and a seed"
            if [ "$f" = "crc32" ]; then
                opts="-f jenkins -s 11"
            else
                opts="-f crc32 -s 11"
            fi
            echo "** cmph -g -a $a -f $f $opts $words"
            # shellcheck disable=SC2086
            ../src/cmph -g -a "$a" -f "$f" $opts "$words" || fail=1
            if [ -n "$fail" ]
            then
                fail=
                echo "still too weak $f hashes, use less keys"
                words=_words1000
                echo "** cmph -g -a $a -f $f $opts $words"
                # shellcheck disable=SC2086
                ../src/cmph -g -a "$a" -f "$f" $opts "$words" || fail=1
            else
                echo "see, that worked"
            fi
        fi
        if [ -z "$fail" ]; then
            echo "** cmph $words"
            ../src/cmph $words
            echo "** mphf_tests -a $a -f $f $opts $words"
            # shellcheck disable=SC2086
            ./mphf_tests -a "$a" -f "$f" $opts "$words"

            case "$a" in
                chd|bdz|bmz|fch|chd_ph|bdz_ph|bmz8|brz)
                    echo "Test ordering table for $a $f"
                    echo "** cmph -gr -a $a -f $f $opts $words"
                    # shellcheck disable=SC2086
                    ../src/cmph -gr -a $a -f "$f" $opts "$words" && \
                        ( echo "** mphf_tests -a $a -f $f $opts $words";  \
                          ./mphf_tests -a $a -f "$f" $opts "$words" )
                    ;;
                chm) echo "Skip ordering table test for $a $f" ;;
                *) echo "TODO Skip ordering table test for $a NYI" ;;
            esac
        fi

        if [ "$a" = "brz" ]; then
            # once again with fch
            # shellcheck disable=SC2086
            echo "** cmph -g -c 3 -a brz -f $f $opts $words"
            # shellcheck disable=SC2086
            ../src/cmph -g -c 3 -a brz -f "$f" $opts "$words" || \
              ../src/cmph -g -c 3 -a brz -f "$f" $opts "$words" || fail=1
            if [ -z "$fail" ]; then
                echo "** cmph -a $a -f $f $opts $words"
                # shellcheck disable=SC2086
                ../src/cmph -c 3 -a brz -f $f $opts $words
                echo "** mphf_tests -a $a -f $f $opts $words"
                # shellcheck disable=SC2086
                ./mphf_tests -a brz -f "$f" $opts "$words"

                #echo "Test ordering table for $a with fch"
                #echo "** cmph -c 3 -gr -a brz -f $f $opts $words"
                #../src/cmph -c 3 -gr -a brz -f "$f" $opts "$words"
                #echo "** mphf_tests -a $a -f $f $opts $words"
                #./mphf_tests -a brz -f "$f" $opts "$words"
            fi
        fi

        rm -f "$words.mph"
        if [ "$words" = "_words1000" ] && [ "$a" != "fch" ]; then
            words=_words
        fi
    done
done
rm -f _words100 _words100.mph _words1000 _words1000.mph _words _words.mph
