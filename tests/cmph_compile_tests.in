#!/bin/sh
# Example:
# src/cmph -C -s 0 -a bdz tests/_words >bdz.c && tests/compile_run bdz tests/_words 10000
# ./cmph_compile_run bdz tests/_words

cd "$(dirname "$0")" || exit 1
set -e
N=10000
WORDS=/usr/share/dict/words

test -e _cwords || head -n "$N" <"${WORDS}" >_cwords
test -e _cwords100 || head -n 100 <"${WORDS}" >_cwords100

#all="bmz chm brz fch bdz bdz_ph bmz8 chd chd_ph"
algos="chm bmz bdz bdz_ph fch chd_ph chd" # brz
for a in $algos; do
    rm -f _cwords.mph
    if [ "$a" = "bmz8" ] || [ "$a" = "fch" ]; then
        rm -f _cwords100.mph
        words=_cwords100
        nwords=100
    else
        words=_cwords
        nwords="$N"
    fi
    echo "** cmph -C -a $a $words >$a.c"
    ../src/cmph -C -a "$a" $words >"$a.c"
    echo "** cc -O2 -Wall -Wextra -c $a.c"
    cc -O2 -Wall -Wextra -c "$a.c"
    echo "** compile_run $a $words $nwords"
    ./compile_run "$a" "$words" "$nwords" && rm "$a.c" "$a.o"
done
rm -f _cwords100.mph

funcs="jenkins wyhash crc32 fnv djb2 sdbm"
for f in $funcs; do
    # cmh uses hash_vector
    rm -f _cwords.mph
    args="$f"
    if [ "$f" = crc32 ] || [ "$f" = sdbm ] || [ "$f" = djb2 ]
    then
        echo too weak "$f" hash, use a seperate hashfunc and a seed
        args="$f -f jenkins -s 11"
    fi
    echo "** cmph -C -f $args _cwords"
    # shellcheck disable=SC2086
    ../src/cmph -C -f $args _cwords >"$f.c"
    echo "** cc -O2 -Wall -Wextra -c -I@top_srcdir@/src $f.c"
    cc -O2 -Wall -Wextra -c -I"@top_srcdir@/src" "$f.c"
    echo "** compile_run $f _cwords $N"
    ./compile_run "$f" _cwords "$N" && rm "$f.c" "$f.o" || exit 1

    for a in chd bmz bdz bdz_ph chd_ph fch; do
        if [ "$a" = "fch" ]; then
            rm -f _cwords100.mph
            words=_cwords100
            nwords=100
        else
            words=_cwords
            nwords="$N"
        fi
        case "$a" in
            bdz|bdz_ph|fch|chd|chd_ph)
                # bdz uses the hash_vector API, 3x in one
                case "$f" in
                    sdbm|djb2*)
                        echo "too weak $f hash with $a"
                        break
                        ;;
                esac
                ;;
            *) ;;
        esac
        echo "** cmph -C -f $f -a $a $words >${f}_${a}.c"
        ../src/cmph -C -f "$f" -a "$a" "$words" >"${f}_${a}.c"
        echo "** cc -O2 -Wall -Wextra -c -I@top_srcdir@/src ${f}_${a}.c"
        cc -O2 -Wall -Wextra -c -I"@top_srcdir@/src" "${f}_${a}.c"
        echo "** compile_run ${f}_${a} $words $nwords"
        ./compile_run "${f}_${a}" "$words" "$nwords" && rm "${f}_${a}.c" "${f}_${a}.o"
    done
done
rm -f _cwords _cwords.mph _cwords100 _cwords100.mph
