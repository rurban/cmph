#!/bin/sh
# Example:
# src/cmph -C -s 0 -a bdz tests/_words >bdz.c && tests/compile_run bdz tests/_words 10000
# ./cmph_compile_run bdz tests/_words

cd "$(dirname "$0")" || exit 1
set -e
N=10000
WORDS=/usr/share/dict/words

test -e _cwords || head -n $N <${WORDS} >_cwords
test -e _cwords100 || head -n 100 <${WORDS} >_cwords100

all="bmz chm brz fch bdz bdz_ph bmz8 chd chd_ph"
algos="chm bmz bdz fch" # brz chd
for a in $algos; do
    rm -f _cwords.mph
    if [ $a = bmz8 ] || [ $a = fch ]; then
        rm -f _cwords100.mph
        words=_cwords100
        nwords=100
    else
        words=_cwords
        nwords=$N
    fi
    echo "** cmph -C -a $a $words >$a.c"
    ../src/cmph -C -a $a $words >$a.c
    echo "** cc -O2 -Wall -Wextra -c $a.c"
    cc -O2 -Wall -Wextra -c $a.c
    echo "** compile_run $a $words $nwords"
    ./compile_run $a $words $nwords && rm $a.c $a.o
done
rm -f _cwords100.mph

all_funcs="jenkins wyhash crc32 fnv djb2 sdbm"
funcs="jenkins wyhash crc32 djb2"
for f in $funcs; do
    # cmh uses hash_vector
    rm -f _cwords.mph
    if [ $f = sdbm ] || [ $f = djb2 ]
    then
        echo too weak $f hash, use a seperate hashfunc and a seed
        f="$f -f jenkins -s 11"
    fi
    echo "** cmph -C -f $f _cwords"
    ../src/cmph -C -f $f _cwords >$f.c
    echo "** cc -O2 -Wall -Wextra -c -I@top_srcdir@/src $a.c"
    cc -O2 -Wall -Wextra -c -I@top_srcdir@/src $f.c
    echo "** compile_run $f _cwords $N"
    ./compile_run $f _cwords $N && rm $f.c $f.o

    # bdz uses the hash_vector API, 3x in one
    case $f in
        sdbm|djb2*)
            echo too weak $f hash with BDZ
            break
            ;;
    esac
    echo "** cmph -C -f $f -a bdz _cwords >${f}_bdz.c"
    ../src/cmph -C -f $f -a bdz _cwords >${f}_bdz.c
    echo "** cc -O2 -Wall -Wextra -c -I@top_srcdir@/src ${f}_bdz.c"
    cc -O2 -Wall -Wextra -c -I@top_srcdir@/src ${f}_bdz.c
    echo "** compile_run ${f}_bdz _cwords $N"
    ./compile_run ${f}_bdz _cwords $N && rm ${f}_bdz.c ${f}_bdz.o
done
rm -f _cwords _cwords.mph _cwords100 _cwords100.mph
